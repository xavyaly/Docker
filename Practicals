apt-get install -y docker.io    Docker installation

docker version                  Client and Server Description

https://hub.docker.com/         Docker hub login

docker daemon                   Required for docker tool to execute

Example 1:

docker run hello-world          Try to fetch from local
                                Post try to fetch from web
                                Hash code: dbcs (distributed code base)
                                Digest: SHA Algorithmic Value
                                Status: latest
docker image
docker pull busybox
docker images
docker run ubuntu:14.04 echo "Hello Docker"
docker images
docker run ubuntu:14.02 ls
docker run ubuntu:14.02 ps -ef
docker ps
docker ps -l                    View the docker process long listing
docker ps -aq                   View the container id's
docker ps -a --filter "status=exited"     Process which are exited
docker run -I -t ubuntu:14.04 bash        -i: stdin
                                          -t: bash terminal
touch sample                    Create an empty file
exit                            To switch back to the previous terminal
 
docker run -d ubuntu:14.04 ping localhost -c 50     Unique id
docker ps
docker run -d -P nginx
localhost:32768                     Display
docker run -d tomcat:8              run the tomcat images
docker ps
localhost:8080/                     Display
docker stop <contianer_id>          Stop the container
docker start -a <container_id>      Start the container
docker ps             
docker kill <container_id>          Kill the contianer
docker run -d ubuntu:14.04 ping localhost -c 50     Unique id
docker attach <unique_id>           Statistics of ping command
clear
docker -d -it ubuntu:14.04 ping localhost -c 50     -it: create a separate terminal,Unique id 
docker run -I -t ubuntu:14.04 bash          Different terminal
docker ps                           No output, coz you are no more present in the previous terminal
ps -ef                              Normal linux command will work 
exit                                Switch back to docker prompt
clear
docker ps
docker exec -i -t <container_id>        Move the terminal 
docker logs --tail 10 <container_id>    Last 10 rows 
docker logs -f <container_id>
docker inspect <container_id>           JSON Format
docker inspect <container_id> | grep "Gateway"      Used in automation
docker inspect --format='{{.RootFS.Layers}}' ubuntu:14.04   Sha256
docker inspect --format='{{.Config.Image}}' ubuntu:14.04    Sha256

--------------------------------------------------------------------------------------------------------------------------------------


Second Day:

 docker run -d -P nginx
 
 docker ps
 
 docker run -d -it ubuntu:14.04 ping localhost -c 50      Ping the local host
 
 docker run -I -t ubuntu:14.04 bash                       Switch the terminal
 
 exit
 
 apt-get update
 
 apt-get install -y wget vim                              Install the latest vim and wget
 
 which vim
 
 which docker                                             Path where docker installed
 
 docker run -d busybox
 
 docker commit <container_id> <my_name>/myapp             Sha256 unique id, placed in a staging area or temporary area, 0-9, a-f, Linux Architecture
 
 docker commit 476guygyuyjhjk87 alam/myapp:1.0            Unique id generated
 
 docker images

 docker run -I -t alam/myapp:1.0 bash

 cat > file1                                              Echo "Hello World"
 
 sh file1                                                 For output
 
 vi add                                                   Error , coz vi is not installed in bash
 
 exit

 docker ps -a 

 docker diff <container_id>                                From root till current commit history
 
 vi Dockerfile                                            FROM ubuntu;14.04
                                                          Run apt-get install yum
                                                          Run apt-get install wget
 
 docker build -t myimage .                                Build the image
 
 docker images                                            <image_id> reflects 
 
 docker run myimage which wget                            /usr/bin/wget, will create the container
 
 docker build -t myimage .                                Good output
 
 vi Dockerfile                                            FROM ubuntu;14.04
                                                          Run apt-get install yum
                                                          Run apt-get install wget
                                                          Run apt-get install -y vim 

 docker build -t myimage:1.0 .                            Again build the image
 
 
 Example-1

 For multiple Dockerfile, Create a directory and put the Dockerfile inside it 

 mkdir Docker; cd Docker
 vi Dockerfile                                          FROM ubuntu;14.04
                                                        Run apt-get update 
                                                        Run apt-get curl
 
 docker build -t image /path

 docker run image 

------------------------------------------------------------------------------------ 
 
 Advanced Docker:

 docker history myimage:1.0                             List all the history



Example:2

 mkdir appjava; cd appjava

 vi Dockerfile                                          FROM java:7 
                                                        COPY HelloWorld.java /
                                                        RUN javac HelloWorld.java
                                                        ENTRYPOINT ["java","Welcome"]
 
 vi HelloWorld                                          Write a helloe world java program
 
 apt-get install java:7

 apt-get install default-jdk

 javac HelloWorld.java
 
 java HelloWorld

 docker build -t javawelcome:1.0 .                      Build the image and give the version to it
 
 docker images                                          Validation

 docker run javawelcome:1.0                              Create the container
 
 docker ps                                               list the container
 
 ------------------------------------------------------------------------------------
 
 Example:3

 vi Dockerfile                                                FROM java:7 
                                                              COPY HelloWorld.java /
                                                              RUN javac HelloWorld.java
                                                              ENTRYPOINT ["java"]
 
 docker build alam/myimage:1.0 .

 docker run alam/myimage:1.0 127.0.0.1

------------------------------------------------------------------------------------

Example:4

 vi Dockerfile
                                                                  FROM java:7 
                                                                  COPY HelloWorld.java /
                                                                  RUN javac HelloWorld.java
                                                                  CMD ["127.0.0.1"]
                                                                  ENTRYPOINT ["ping","-c","30"]

 docker build alam/myimage:1.0 .                                   For building an image
 
 docker run alam/myimage:1.0                                       For container

------------------------------------------------------------------------------------

Example:5 Push your repository

 docker login

 docker tag myimage:1.0 alam/myimage:1.0

 docker push alam/myimage:1.0 

------------------------------------------------------------------------------------

Example:6 Volume Mount

 docker volume create --name test1

 docker run -it -v test1:/www/website ubuntu:14.04 bash

 docker volume inspect test1

------------------------------------------------------------------------------------

 Example: Network

 docker network ls

 docker network create

 docker network connect

 docker network ls

 docker network rm

 docker network disconnect

 docker network inspect

------------------------------------------------------------------------------------

Example: Troubleshooting

"${DOCKER_MACHINE}" create -d virtualbox $PROXY_ENV "${VM}"
"${DOCKER_MACHINE}" create -d virtualbox --virtualbox-no-vtx-check $PROXY_ENV "${VM}"

