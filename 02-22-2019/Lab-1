DOCKERFILE -> IMAGE -> CONTAINER

// Starting a nginx web-server

$ docker container run --publish 80:80 nginx
Unable to find image 'nginx:latest' locally
latest: Pulling from library/nginx
6ae821421a7d: Pull complete 
da4474e5966c: Pull complete 
eb2aec2b9c9f: Pull complete 
Digest: sha256:dd2d0ac3fff2f007d99e033b64854be0941e19a2ad51f174d9240dda20d9f534

Status: Downloaded newer image for nginx:latest

# Stuck at here then we hit in browser “localhost:80” => refresh it for logs in the console

# Below are the logs:
172.17.0.1 - - [22/Feb/2019:04:21:31 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.2 Safari/605.1.15" "-"
172.17.0.1 - - [22/Feb/2019:04:21:31 +0000] "GET /apple-touch-icon-precomposed.png HTTP/1.1" 404 153 "-" "Safari/14606.3.4 CFNetwork/976 Darwin/18.2.0 (x86_64)" "-"
2019/02/22 04:21:31 [error] 6#6: *2 open() "/usr/share/nginx/html/apple-touch-icon-precomposed.png" failed (2: No such file or directory), client: 172.17.0.1, server: localhost, request: "GET /apple-touch-icon-precomposed.png HTTP/1.1", host: "localhost"
2019/02/22 04:21:31 [error] 6#6: *2 open() "/usr/share/nginx/html/apple-touch-icon.png" failed (2: No such file or directory), client: 172.17.0.1, server: localhost, request: "GET /apple-touch-icon.png HTTP/1.1", host: "localhost"
172.17.0.1 - - [22/Feb/2019:04:21:31 +0000] "GET /apple-touch-icon.png HTTP/1.1" 404 153 "-" "Safari/14606.3.4 CFNetwork/976 Darwin/18.2.0 (x86_64)" "-"


// Background Process

Download the image called “nginx” from the docker hub
Started a new container from the docker image
Open port 80 on the host ip
Route the traffic to the customer IP, port 80


// Executes on detach mode but still you can see the outputs in browser:
$ docker container run --publish 80:80 --detach nginx
ec5e983bd67f3b23117934f4ffb4ead3177b14e96c2a942b1402862454497e25

# List all the running containers only:
$ docker container ls

Example:
$ docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES
ec5e983bd67f        nginx               "nginx -g 'daemon of…"   2 minutes ago       Up 2 minutes        0.0.0.0:80->80/tcp   objective_stallman

# List all the hidden containers:
$ docker ps -a
$ docker container ls -a

# Stop the running container:
$ docker container stop <container-id>

# Start the stopped container:
$ docker contianer start <container-id>


# ISSUES:

# IF IMAGE ALREADY PRESENT
$ docker container run --publish 8080:80 --detach java	
Unable to find image 'java:latest' locally
latest: Pulling from library/java
5040bd298390: Already exists 
fce5728aad85: Already exists 
76610ec20bf5: Already exists 
60170fec2151: Already exists 
e98f73de8f0d: Already exists 
11f7af24ed9c: Already exists 
49e2d6393f32: Already exists 
bb9cdec9c7f3: Already exists 
Digest: sha256:c1ff613e8ba25833d2e1940da0940c3824f03f802c449f3d1815a66b7f8c0e9d
Status: Downloaded newer image for java:latest
a72363f850a58b29535fbb5412a10ce4ede1de32c1b6826f45cc9d1a648eaed8


# PORT IS ALREADY ALLOCATED:
$ docker container run --publish 80:80 --detach java
915b3248e7ac5f170e82295c14739e83262f4df066a9d36e2e63945ff537b2d2
docker: Error response from daemon: driver failed programming external connectivity on endpoint quirky_beaver (f49cc213d63fcbfc136ca0139e7b8d8436815789ccc95400e03a5f51db35ee1f): Bind for 0.0.0.0:80 failed: port is already allocated.


# TRYING TO CREATE A CONTAINER IN DIFFERENT PORT
$ docker container run --publish 90:80 --detach java
e440a0314669a80561ae2e129ebda427b5b15f86305b1c2ed2fb0a21d98400bb


# To see the Container logs
$ docker container logs ec5e983bd67f
172.17.0.1 - - [22/Feb/2019:04:31:47 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.2 Safari/605.1.15" "-"
172.17.0.1 - - [22/Feb/2019:04:31:49 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.2 Safari/605.1.15" "-"
172.17.0.1 - - [22/Feb/2019:04:31:55 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.2 Safari/605.1.15" "-"
172.17.0.1 - - [22/Feb/2019:04:32:36 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.2 Safari/605.1.15" "-"
172.17.0.1 - - [22/Feb/2019:04:32:36 +0000] "GET / HTTP/1.1" 200 612 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_2) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.2 Safari/605.1.15" "-"


# List the Process Id’s where container running:
$ docker container start ec5e983bd67f
ec5e983bd67f
$ docker container top ec5e983bd67f
PID                 USER                TIME                COMMAND
3394                root                0:00                nginx: master process nginx -g daemon off;
3430                101                 0:00                nginx: worker process


# What happens when we execute “docker container run”:
Looks that image locally in image cache, if doesn’t find that specific image
Then looks to the remote image repository (default is docker hub)
Download the latest version (nginx: latest by default)
Create a new container based on the image and prepares to start
Gives a virtual IP on a private network inside the docker engine
Opens up a port 80 on host and forwards to port 80 in container (80:80)
Start the container by using the CMD in the image Dockerfile
